"""
Django settings for skigit_project project.

Generated by 'django-admin startproject' using Django 1.11.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SITE_ID = 2

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$1z82p!a_m=)&)b3(y^m=gpo6&!pud@akdv%0tdjkcoen*hl64'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

TEMPLATE_DEBUG = DEBUG

ALLOWED_HOSTS = ['*']

HOST = 'http://skigit.com'

AUTH_PROFILE_MODULE = 'skigit.Profile'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),
)

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/0",
        "OPTIONS": {
            # 'PASSWORD':'tech@geeks',
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

RQ_QUEUES = {
    'default': {
        'USE_REDIS_CACHE': 'default',
    },
}

# Application definition

INSTALLED_APPS = [
    'fluent_dashboard',
    'admin_tools',
    'admin_tools.theming',
    'admin_tools.menu',
    'admin_tools.dashboard',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'swampdragon',
    'swampdragon_auth',
    'rest_framework',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'django_social_share',
    'tinymce',
    'sorl.thumbnail',
    'django_rq',
    'debug_toolbar',
    'el_pagination',
    'social.apps.django_app.default',
    'django_youtube',
    'daterange_filter',
    'django_cron',
    'social_django',
    'skigit',
    'friends',
    'invoices',
]

CRON_CLASSES = [
    "skigit.month_invoice_email.SkigitCronJob",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'skigit.activeuser_middleware.ActiveUserMiddleware',
]

SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ROOT_URLCONF = 'skigit_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + '/templates/',],
        #'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'social.apps.django_app.context_processors.backends',
                'social.apps.django_app.context_processors.login_redirect',
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
                'admin_tools.template_loaders.Loader',
            ]
        },
    },
]

AUTHENTICATION_BACKENDS = (
    'social.backends.facebook.FacebookOAuth2',
    'social.backends.google.GoogleOAuth2',
    # 'social.backends.google.GooglePlusAuth',
    'social.backends.twitter.TwitterOAuth',
    'social.backends.yahoo.YahooOpenId',
    'social.backends.linkedin.LinkedinOAuth2',
    'django.contrib.auth.backends.ModelBackend',
    'skigit.backends.EmailOrUsernameModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

X_FRAME_OPTIONS = 'DENY'

# Youtube Video Upload credantials

YOUTUBE_AUTH_EMAIL = 'skigit3@gmail.com'
YOUTUBE_AUTH_PASSWORD = 'Ajaj0415'
YOUTUBE_DEVELOPER_KEY = 'AIzaSyAsSsY-jweRDiEtpco_mD38gHAjYyDopUk' #', get one from http://code.google.com/apis/youtube/dashboard/'
YOUTUBE_CLIENT_ID = '1027445482699-1ujfqumakstu1hsd315baq61nms3u6jo.apps.googleusercontent.com'

#YOUTUBE_AUTH_EMAIL = 'demo.techgeeks@gmail.com'
#YOUTUBE_AUTH_PASSWORD = 'tech@geeks'
#YOUTUBE_DEVELOPER_KEY = 'AIzaSyAJJQ_eRWEMG_t6sc6rTzyia6jvQ-tTHNo' #', get one from http://code.google.com/apis/youtube/dashboard/'
#YOUTUBE_CLIENT_ID = '382522846421-8kka6iv73lu8pv3jk2aojgkk4p8pm53g.apps.googleusercontent.com'



# Google
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '824401754221-ir2qqdplffo2i01s9cg6kq5cvcr5ho2s.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'Uv1nFfKndPe58mghGX-0W8l3'


# Facebook
SOCIAL_AUTH_FACEBOOK_KEY = '1166901150026886'
SOCIAL_AUTH_FACEBOOK_SECRET = '973ec700de10444e287448da15d5924e'
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'locale': 'ru_RU',
    'fields': 'id, name, email, gender'
}

# Twitter
SOCIAL_AUTH_TWITTER_KEY = 'eBUl4MOTi72U1PDJ9dHmyrqEJ'
SOCIAL_AUTH_TWITTER_SECRET = 'XjrAd5dhrffnbqXFcK1IuBEfNTrDdmftklGmIMKiXb7DHr0u43'
SOCIAL_AUTH_TWITTER_FORCE_EMAIL_VALIDATION = True
SOCIAL_AUTH_TWITTER_SCOPE = ['email']
SOCIAL_AUTH_TWITTER_PROFILE_EXTRA_PARAMS = {
    'locale': 'ru_RU',
    'fields': 'id, name, email, gender'
}

# Yahoo
SOCIAL_AUTH_YAHOO_OAUTH2_KEY = 'dj0yJmk9RVBNU25VS1NuTmh1JmQ9WVdrOVdERlhWVk0zTjJzbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmeD03Ng--'
SOCIAL_AUTH_YAHOO_OAUTH2_SECRET = '9e1d202035d3f472a32a01758e24b923b777233d'

# LinkedIn
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '754eqei6m6kww4'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'Qycx2PyVEmTjDKud'

SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE = ['r_basicprofile', 'r_emailaddress']
# Add the fields so they will be requested from linkedin.
SOCIAL_AUTH_LINKEDIN_OAUTH2_FIELD_SELECTORS = ['email-address', 'headline', 'industry']
# Arrange to add the fields to UserSocialAuth.extra_data
SOCIAL_AUTH_LINKEDIN_OAUTH2_EXTRA_DATA = [('id', 'id'),
                       ('first-name', 'first_name'),
                       ('last-name', 'last_name'),
                       ('email-address', 'email_address'),
                       ('headline', 'headline'),
                       ('industry', 'industry')]


SOCIAL_AUTH_PIPELINE = (
    'social.pipeline.social_auth.social_details',
    'social.pipeline.social_auth.social_uid',
    'social.pipeline.social_auth.auth_allowed',
    'social.pipeline.social_auth.social_user',
    'social.pipeline.user.get_username',
    'social.pipeline.social_auth.associate_by_email',
    'social.pipeline.user.create_user',
    'skigit.socialauth.save_profile',
    'skigit.socialauth.update_user_social_data',
    'social.pipeline.social_auth.associate_user',
    'social.pipeline.social_auth.load_extra_data',
    'social.pipeline.user.user_details'
)

SOCIAL_AUTH_DISCONNECT_PIPELINE = (

    'social.pipeline.disconnect.allowed_to_disconnect',

    # Collects the social associations to disconnect.
    'social.pipeline.disconnect.get_entries',

    # Revoke any access_token when possible.
    'social.pipeline.disconnect.revoke_tokens',

    # Removes the social associations.
    'social.pipeline.disconnect.disconnect',
)

# Number of seconds of inactivi ty before a user is marked offline
USER_ONLINE_TIMEOUT = 300

# Number of seconds that we will keep track of inactive users for before
# their last seen is removed from the cache
USER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 7

ROOT_URLCONF = 'skigit_project.urls'

WSGI_APPLICATION = 'skigit_project.wsgi.application'

# SwampDragon settings
SWAMP_DRAGON_CONNECTION = ('swampdragon_auth.socketconnection.HttpDataConnection', '/data')
# SWAMP_DRAGON_CONNECTION = ('swampdragon_auth.connections.sockjs_connection.DjangoSubscriberConnection', '/data')
DRAGON_URL = 'http://skigit.com:9999'
# DRAGON_URL = 'http://127.0.0.1:9999'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

MEDIA_ROOT = (
    BASE_DIR + '/media/'
)

MEDIA_URL = '/media/'

#STATICFILES_DIRS = (
#   BASE_DIR + '/static/',
#)

STATIC_ROOT = BASE_DIR + '/static/'
STATIC_URL = '/static/'

EMAIL_HOST_VIDEO = 'video@skigit.com'
EMAIL_HOST_BUSINESS = 'sperks@skigit.com'
EMAIL_HOST_REPORT_BUG = 'bugs@skigit.com'
EMAIL_HOST_COPYRIGHT = 'copyright@skigit.com'
EMAIL_HOST_PAYMENT = 'invoice@skigit.com'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.zoho.com'
EMAIL_HOST_USER = 'accounts@skigit.com'
EMAIL_HOST_PASSWORD = 'ajaj0415'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'simple',
            'filename': 'logs/debug.log',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            # 'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'INFO',
        }
    }
}


GENERAL_USER = 'General User'
BUSINESS_USER = 'Business User'
SKIGIT_ADMIN = "Skigit Admin User"

# ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_SIGNUP_FORM_CLASS = 'skigit.forms.SignupForm'
#ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_AUTHENTICATION_METHOD = "username"
ACCOUNT_EMAIL_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = False
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
EMAIL_CONFIRMATION_DAYS = 6
# ACCOUNT_USERNAME_MIN_LENGTH = 6
# ACCOUNT_PASSWORD_MIN_LENGTH = 6


SOCIAL_REDIRECT_URL = 'social_redirect/'
# POPUP_URL = 'youtube/popup_page/'
# PLUGIN_URL = 'plugin/'
VIDEO_ROOT = 'videos'

PROFILE_PLACEHOLDER = '/static/skigit/detube/images/noimage_user.jpg'
LOGO_PLACEHOLDER = '/static/skigit/detube/images/logo_placeholder1.png'
OFFLINE_BUTTON_IMG = '/static/skigit/detube/images/offline.png'
ONLINE_BUTTON_IMG = '/static/skigit/detube/images/online.png'
MSG_DELETE_IMG = '/static/skigit/detube/images/delete.png'
MSG_READ_IMG = '/static/skigit/detube/images/read.png'
MSG_UNREAD_IMG = '/static/skigit/detube/images/unread.png'
MSG_SENDER_IMG = '/static/skigit/detube/images/Undo-icon.png'
SUCCESS_ICON = '/static/skigit/detube/images/success_icon.png'
DELETE_ICON = '/static/skigit/detube/images/deleteIcon.png'


ADMIN_TOOLS_INDEX_DASHBOARD = 'fluent_dashboard.dashboard.FluentIndexDashboard'
ADMIN_TOOLS_APP_INDEX_DASHBOARD = 'fluent_dashboard.dashboard.FluentAppIndexDashboard'
ADMIN_TOOLS_MENU = 'fluent_dashboard.menu.FluentMenu'

TINYMCE_DEFAULT_CONFIG = {
    'plugins': "table,spellchecker,paste,searchreplace",
    'theme': "advanced",
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 10,
}

TINYMCE_SPELLCHECKER = True
TINYMCE_COMPRESSOR = True

EL_PAGINATION_PER_PAGE = 10
EL_PAGINATION_LOADING = "<img src='http://skigit.com/static/skigit/images/inf_loading.gif' alt='loading' />"

# Payment Setup Braintree
#
# BRAINTREE_MERCHANT_ID = 'ngystdywxw6thhbb'
# BRAINTREE_PUBLIC_KEY = '3q8yncz6g3ptvkw3'
# BRAINTREE_PRIVATE_KEY = '7ab219b488e690ba2decd9c102f6bec9'

BRAINTREE_MERCHANT_ID = 'xpr2kx38kjbxmxnc'
BRAINTREE_PUBLIC_KEY = 'hgsdng8hwv6kms45'
BRAINTREE_PRIVATE_KEY = '664da55c7860cf48b86ec168ca7ff9de'

CLIENT_SECRETS_FILE = 'client_secret.json'

# local settings
try:
    from skigit_project.local_settings import *
except ImportError:
    pass
