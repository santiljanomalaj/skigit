# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-22 22:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('skigit', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CopyRightInfringement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_date', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='Report updated date')),
                ('created_date', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Report created date')),
                ('complaint_date', models.DateField(auto_created=True, auto_now=True, verbose_name='Complaint Date')),
                ('skigit_id', models.IntegerField(blank=True, null=True, verbose_name='Infringed work on Skigit')),
                ('urls', models.URLField(verbose_name='My Website Urls')),
                ('description', models.TextField(verbose_name='Description')),
                ('address', models.CharField(max_length=500, verbose_name='Street Address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=200, verbose_name='State/Province')),
                ('zip_code', models.IntegerField(blank=True, null=True, verbose_name='Zip/Postal Code')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('phone', models.CharField(max_length=200, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=200, verbose_name='Email Address')),
                ('submitter_request', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=None, verbose_name='Submitter Request Remove all')),
                ('full_name', models.CharField(max_length=500, verbose_name='Full name')),
                ('signature', models.CharField(blank=True, max_length=200, null=True, verbose_name='Electronic Signature')),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Open'), (1, 'Under investigation'), (2, 'Closed'), (3, 'Remove Skigit')], default=0, null=True, verbose_name='Investigation Status')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaint_by_register_user', to='user.Profile', verbose_name='Submitted by')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='infringement_copytight_user', to=settings.AUTH_USER_MODEL, verbose_name='Submitted by User')),
            ],
            options={
                'verbose_name': 'Copyright Infringement',
                'verbose_name_plural': 'Copyright Infringement',
            },
        ),
        migrations.CreateModel(
            name='CopyRightInvestigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_date', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='Investigation updated date')),
                ('created_date', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Investigation created date')),
                ('remove_all', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Remove all')),
                ('strike', models.BooleanField(choices=[(False, 'No'), (True, 'Yes')], default=False, verbose_name='Strike')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Investigation Description and conclusion')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Action Taken')),
                ('copy_right', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='skigit.CopyRightInfringement', verbose_name='Copy Right Infringement')),
                ('investigator_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_investigator_name', to='user.Profile', verbose_name='Investigator Name')),
            ],
            options={
                'verbose_name': 'Copyright Investigation',
                'verbose_name_plural': 'Copyright Investigation',
            },
        ),
    ]
