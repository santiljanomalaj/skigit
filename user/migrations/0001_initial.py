# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-11 20:04
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    run_before = [
        ('skigit', '0001_initial'),
    ]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessLogo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='skigit/logo/%y/%m/%d')),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtraProfileImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='skigit/profile/%y/%m/%d')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('phone_num', models.CharField(blank=True, max_length=10)),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Male'), (1, 'Female')], null=True, verbose_name='Gender')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='skigit/profile/', verbose_name='Add a personal photo')),
                ('incentive', models.IntegerField(blank=True, choices=[(0, 'No'), (1, 'Yes')], null=True, verbose_name='Incentive')),
                ('skigit_incentive', models.TextField(blank=True, null=True, verbose_name='Skigit Incentive')),
                ('incetive_val', models.IntegerField(blank=True, null=True, verbose_name='Incentive value($USD)')),
                ('redemoption_instrucations', models.TextField(blank=True, null=True, verbose_name='Redemoption Instrucations')),
                ('coupan_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Coupan Code')),
                ('coupan_image', models.ImageField(blank=True, null=True, upload_to='skigit/coupan/', verbose_name='Add coupan image')),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contact Name')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Contact Phone')),
                ('biller_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Biller Name')),
                ('biller_address1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Biller Address1')),
                ('biller_address2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Biller Address2')),
                ('payment_method', models.CharField(choices=[('0', 'PayPal'), ('1', 'Credit/Debit Card')], default='0', max_length=1, verbose_name='Payment Type')),
                ('payment_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contact Email for payment')),
                ('payment_user_name', models.CharField(blank=True, max_length=35, null=True, verbose_name='Name for payment setup')),
                ('about_me', models.TextField(blank=True, null=True, verbose_name='About Me')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('language', models.CharField(blank=True, choices=[('', 'Select Language'), ('ENG', 'English'), ('SPN', 'Spanish'), ('FR', 'French'), ('CH', 'Chinese'), ('ARB', 'Arabic'), ('HND', 'Hindi'), ('RSN', 'Russian'), ('PRT', 'Portuguese'), ('JPN', 'Japanese'), ('GRM', 'German'), ('TUR', 'Turkish'), ('VTM', 'Vietnamese'), ('THI', 'Thai'), ('DCH', 'Dutch')], max_length=200, null=True, verbose_name='Language')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('state', models.CharField(blank=True, max_length=30, null=True, verbose_name='State')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='City')),
                ('zip_code', models.BigIntegerField(blank=True, null=True, verbose_name='Zip Code')),
                ('like_notify', models.BooleanField(default=True, verbose_name='Like Notification')),
                ('follow_un_follow_notify', models.BooleanField(default=True, verbose_name='Follow/ Un follow Notification')),
                ('friends_request_notify', models.BooleanField(default=True, verbose_name='Friend Request Notification')),
                ('friends_accept_notify', models.BooleanField(default=True, verbose_name='Friend Accept Notification')),
                ('plug_notify', models.BooleanField(default=True, verbose_name='Plug Notification')),
                ('un_plug_notify', models.BooleanField(default=True, verbose_name='Un Plug Notification')),
                ('skigit_notify', models.BooleanField(default=True, verbose_name='Skigit Upload Notification')),
                ('share_notify', models.BooleanField(default=True, verbose_name='Share Skigit Notification')),
                ('activation_key', models.CharField(blank=True, max_length=100, null=True)),
                ('key_expires', models.DateTimeField(default=django.utils.timezone.now)),
                ('company_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Company Title')),
                ('search_profile_security', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=1, verbose_name='Security Search')),
                ('business_type', models.CharField(blank=True, choices=[('', 'Select Business Type'), ('MD', 'Media'), ('PRF', 'Professional')], max_length=300, null=True, verbose_name='Business Type')),
                ('video_management_rights', models.BooleanField(default=False, verbose_name='Video Management')),
                ('payment_management_rights', models.BooleanField(default=False, verbose_name='Payment Management')),
                ('copyright_investigation_rights', models.BooleanField(default=False, verbose_name='Copyright Management')),
                ('inappropriate_rights', models.BooleanField(default=False, verbose_name='Inappropriate Management')),
                ('bug_rights', models.BooleanField(default=False, verbose_name='Bug Management')),
                ('email_sent', models.BooleanField(default=False, verbose_name='Mail Sent')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profile',
            },
        ),
        migrations.CreateModel(
            name='ProfileImg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to='skigit/profile/%y/%m/%d')),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disc1', models.CharField(blank=True, max_length=30, null=True)),
                ('url1', models.URLField(blank=True, null=True)),
                ('disc2', models.CharField(blank=True, max_length=30, null=True)),
                ('url2', models.URLField(blank=True, null=True)),
                ('disc3', models.CharField(blank=True, max_length=30, null=True)),
                ('url3', models.URLField(blank=True, null=True)),
                ('disc4', models.CharField(blank=True, max_length=30, null=True)),
                ('url4', models.URLField(blank=True, null=True)),
                ('disc5', models.CharField(blank=True, max_length=30, null=True)),
                ('url5', models.URLField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='cover_img',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.ProfileImg'),
        ),
        migrations.AddField(
            model_name='profile',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='profile',
            name='extra_profile_img',
            field=models.ManyToManyField(blank=True, to='user.ExtraProfileImage'),
        ),
        migrations.AddField(
            model_name='profile',
            name='logo_img',
            field=models.ManyToManyField(blank=True, to='user.BusinessLogo'),
        ),
        migrations.AddField(
            model_name='profile',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
