# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-01-11 20:14
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sperks', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('status', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Favorite/Unfavorite Skigit',
                'verbose_name_plural': 'Favorite/Unfavorite Skigits',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('status', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Like/Unlike Skigit',
                'verbose_name_plural': 'Like/Unlike Skigits',
            },
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('title', models.CharField(db_index=True, max_length=200, verbose_name='My Skigit Title')),
                ('video_id', models.CharField(help_text='The Youtube id of the video', max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=255, null=True)),
                ('swf_url', models.URLField(blank=True, max_length=255, null=True)),
                ('access_control', models.SmallIntegerField(choices=[(0, 'Public'), (1, 'Unlisted'), (2, 'Private')], default=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_user_auth1', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='created_date')),
                ('updated_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='updated_date')),
                ('title', models.CharField(error_messages={'unique': 'This name already exists.'}, max_length=40, unique=True, verbose_name='My Skigit Title')),
                ('made_by_option', models.CharField(blank=True, default='', max_length=200, verbose_name='If not found in the list above, add maker or proprietor name')),
                ('bought_at', models.URLField(max_length=255)),
                ('add_logo', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=1)),
                ('why_rocks', models.TextField(default='', max_length=200)),
                ('status', models.IntegerField(default=0, verbose_name='Status')),
                ('is_share', models.BooleanField(default=False)),
                ('inappropriate_skigit', models.CharField(blank=True, choices=[('0', 'Pending'), ('1', 'Appropriate'), ('2', 'Inappropriate')], max_length=5, null=True, verbose_name='Inappropriate')),
                ('is_plugged', models.BooleanField(default=False, verbose_name='Plugged')),
                ('is_sperk', models.BooleanField(default=False, verbose_name='Sperk')),
                ('receive_donate_sperk', models.IntegerField(choices=[(2, 'Receive sperk'), (1, 'Donate sperk')], default=0, verbose_name='Sperk choice')),
                ('view_count', models.IntegerField(blank=True, default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('copyright_skigit', models.CharField(blank=True, choices=[('0', 'Open'), ('1', 'Under Investigation'), ('2', 'Closed'), ('3', 'Remove Skigit')], default=None, max_length=5, null=True, verbose_name='Copyright Infringement')),
                ('business_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='associated_business_user', to='user.BusinessLogo')),
                ('business_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skigit_business_user', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('donate_skigit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='donation_skigit', to='sperks.Donation', verbose_name='Donation Organization')),
                ('incentive', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sperks.Incentive')),
                ('made_by', models.ForeignKey(blank=True, help_text='Select maker', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_made_by', to=settings.AUTH_USER_MODEL, verbose_name='My awesome thing was made by')),
                ('plugged_skigit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plugged_skigit', to='skigit.Video', verbose_name='Plugged Skigit')),
                ('share_skigit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videodetail_requests_created', to='skigit.Video')),
                ('skigit_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='skigit.Video')),
                ('subject_category', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='core.SubjectCategory', verbose_name='My Subject Category')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Skigit',
                'verbose_name_plural': 'Skigits',
                'ordering': ('created_date',),
            },
        ),
        migrations.AddField(
            model_name='thumbnail',
            name='video',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='skigit.Video'),
        ),
        migrations.AddField(
            model_name='like',
            name='skigit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='skigit.Video'),
        ),
        migrations.AddField(
            model_name='like',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='like',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='favorite',
            name='skigit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favourites', to='skigit.Video'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterIndexTogether(
            name='videodetail',
            index_together=set([('status', 'is_active', 'plugged_skigit', 'is_plugged'), ('status', 'is_active')]),
        ),
        migrations.AlterIndexTogether(
            name='like',
            index_together=set([('skigit', 'user', 'status')]),
        ),
        migrations.AlterIndexTogether(
            name='favorite',
            index_together=set([('skigit', 'status', 'is_active')]),
        ),
    ]
